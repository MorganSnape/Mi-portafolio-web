---
interface Props {
  title: string;
  body: string;
  href: string;
  tags?: string[];
  size?: "sm" | "md" | "xl";
  src: string;
  alt?: string;
}

const { href, title, body, src, alt } = Astro.props;

let { size, tags } = Astro.props;

if (size === undefined) {
  size = "sm";
}

let tagss: string[] = [];
if (tags) {
  tagss = tags.slice(0, 2);
}
---

<article class="h-60 w-5/6 md:w-full max-w-lg overflow-hidden bg-white rounded-xl relative">
  <a {href} class="flex flex-col-reverse md:flex-row md:p-6 gap-4 justify-end items-center h-full w-full">
    <main class="flex flex-1 flex-col gap-6 pb-4 px-6 md:p-0 w-full">
      <div class="flex gap-4 absolute top-3 right-3 md:top-0 md:right-0 md:relative">
        {
          tags?.map((tag) => {
            return (
              <span class="rounded-full text-white text-xs bg-purple-900 px-4 py-1">
                {tag}
              </span>
            );
          })
        }
      </div>

      <div>
        <h4 class="font-semibold">{title}</h4>
        <p class="text-slate-600">{body}</p>
      </div>
    </main>

    <div class="w-full h-4/6 md:w-60 md:h-full rounded-lg overflow-hidden">
      <img {src} {alt} class="w-full md:h-full object-cover" />
    </div>
  </a>
</article>

<style>
  p {
    font-family: "Fredoka", sans-serif;
  }
</style>